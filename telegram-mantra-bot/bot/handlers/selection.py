# bot/handlers/selection.py

from aiogram import Router, types, F
from ..keyboards import (
    request_keyboard,
    voice_subscription_keyboard,
    diagnostics_keyboard
)

router = Router()


@router.callback_query(F.data == "has_request")
async def has_request_handler(query: types.CallbackQuery):
    """
    –í–µ—Ç–∫–∞ ¬´–î–∞, —É –º–µ–Ω—è –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å¬ª
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–≤–æ–¥–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    """
    text = (
        "–û—Ç–ª–∏—á–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚Äî ‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
        "‚Äî üéô –ó–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–º (–¥–æ 5 –º–∏–Ω—É—Ç) ‚Äî –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞"
    )
    await query.message.edit_text(text, reply_markup=request_keyboard())
    await query.answer()


@router.callback_query(F.data == "request_text")
async def request_text_handler(query: types.CallbackQuery):
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–º ‚Äî –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç
    """
    await query.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º:")
    await query.answer()


@router.callback_query(F.data == "enable_voice")
async def enable_voice_handler(query: types.CallbackQuery):
    """
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞)
    """
    text = (
        "–ì–æ–ª–æ—Å–æ–º —á–∞—Å—Ç–æ –ø—Ä–æ—â–µ: –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –¥—Ä—É–≥—É, —á—Ç–æ —Å–µ–π—á–∞—Å —Ç—Ä–µ–≤–æ–∂–∏—Ç.\n"
        "–ú—ã —Ä–∞—Å—à–∏—Ñ—Ä—É–µ–º, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ —Å–æ–∑–¥–∞–¥–∏–º –º–∞–Ω—Ç—Ä—É –ª–∏—á–Ω–æ –ø–æ–¥ –≤–∞—Å."
    )
    await query.message.edit_text(text, reply_markup=voice_subscription_keyboard())
    await query.answer()


@router.callback_query(F.data == "explore_inside")
async def explore_inside_handler(query: types.CallbackQuery):
    """
    –í–µ—Ç–∫–∞ ¬´–•–æ—á—É —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è¬ª ‚Äî –Ω–∞—á–∞–ª–æ —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    """
    text = (
        "–¢–æ–≥–¥–∞ –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º —Å –Ω–µ–±–æ–ª—å—à–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ‚Äî –∫–∞–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.\n"
        "–≠—Ç–æ –∑–∞–π–º—ë—Ç –ø–∞—Ä—É –º–∏–Ω—É—Ç –∏ –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Å–µ–π—á–∞—Å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ.\n"
        "–ú—ã –≤–º–µ—Å—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º, —Å —á–µ–≥–æ —Å—Ç–æ–∏—Ç –Ω–∞—á–∞—Ç—å, –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –∏ –º–∞–Ω—Ç—Ä—É, –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–º–µ–Ω–Ω–æ –≤–∞–º."
    )
    await query.message.edit_text(text, reply_markup=diagnostics_keyboard())
    await query.answer()


@router.callback_query(F.data == "start_diagnostics")
async def start_diagnostics_handler(query: types.CallbackQuery):
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
    """
    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–∞—á–∞—Ç—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã
    await query.message.edit_text("–ó–∞–ø—É—Å–∫–∞–µ–º —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É‚Ä¶")
    await query.answer()
