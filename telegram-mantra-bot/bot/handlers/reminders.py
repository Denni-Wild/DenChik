# bot/handlers/reminders.py

from aiogram import Router, types, F
from ..models import SessionLocal, Reminder
from ..keyboards import continue_keyboard

router = Router()


def schedule_reminder(db, user_id: int, mantra_id: int, remind_at):
    """
    –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    reminder = Reminder(
        user_id=user_id,
        mantra_id=mantra_id,
        remind_at=remind_at,
        sent=False
    )
    db.add(reminder)
    db.commit()


@router.callback_query(F.data == "next_step")
async def on_next_step(query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è ¬´‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª
    """
    # –ó–¥–µ—Å—å –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π –º–∞–Ω—Ç—Ä–µ
    await query.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –º–∞–Ω—Ç—Ä–µ‚Ä¶")
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥


@router.callback_query(F.data == "skip_step")
async def on_skip_step(query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è ¬´üîÑ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª
    """
    await query.answer("–®–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω.")
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ —à–∞–≥–∞


@router.callback_query(F.data == "roadmap")
async def on_roadmap(query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è ¬´‚ùì –ú–∞—Ä—à—Ä—É—Ç¬ª
    """
    # –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.message.answer("–í–æ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç:", reply_markup=continue_keyboard())
    await query.answer()
